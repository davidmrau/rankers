params = ["bert.embeddings.word_embeddings.weight","bert.embeddings.position_embeddings.weight","bert.embeddings.token_type_embeddings.weight","bert.embeddings.LayerNorm.weight","bert.embeddings.LayerNorm.bias","bert.encoder.layer.0.attention.self.query.weight","bert.encoder.layer.0.attention.self.query.bias","bert.encoder.layer.0.attention.self.key.weight","bert.encoder.layer.0.attention.self.key.bias","bert.encoder.layer.0.attention.self.value.weight","bert.encoder.layer.0.attention.self.value.bias","bert.encoder.layer.0.attention.output.dense.weight","bert.encoder.layer.0.attention.output.dense.bias","bert.encoder.layer.0.attention.output.LayerNorm.weight","bert.encoder.layer.0.attention.output.LayerNorm.bias","bert.encoder.layer.0.intermediate.dense.weight","bert.encoder.layer.0.intermediate.dense.bias","bert.encoder.layer.0.output.dense.weight","bert.encoder.layer.0.output.dense.bias","bert.encoder.layer.0.output.LayerNorm.weight","bert.encoder.layer.0.output.LayerNorm.bias","bert.encoder.layer.1.attention.self.query.weight","bert.encoder.layer.1.attention.self.query.bias","bert.encoder.layer.1.attention.self.key.weight","bert.encoder.layer.1.attention.self.key.bias","bert.encoder.layer.1.attention.self.value.weight","bert.encoder.layer.1.attention.self.value.bias","bert.encoder.layer.1.attention.output.dense.weight","bert.encoder.layer.1.attention.output.dense.bias","bert.encoder.layer.1.attention.output.LayerNorm.weight","bert.encoder.layer.1.attention.output.LayerNorm.bias","bert.encoder.layer.1.intermediate.dense.weight","bert.encoder.layer.1.intermediate.dense.bias","bert.encoder.layer.1.output.dense.weight","bert.encoder.layer.1.output.dense.bias","bert.encoder.layer.1.output.LayerNorm.weight","bert.encoder.layer.1.output.LayerNorm.bias","bert.encoder.layer.2.attention.self.query.weight","bert.encoder.layer.2.attention.self.query.bias","bert.encoder.layer.2.attention.self.key.weight","bert.encoder.layer.2.attention.self.key.bias","bert.encoder.layer.2.attention.self.value.weight","bert.encoder.layer.2.attention.self.value.bias","bert.encoder.layer.2.attention.output.dense.weight","bert.encoder.layer.2.attention.output.dense.bias","bert.encoder.layer.2.attention.output.LayerNorm.weight","bert.encoder.layer.2.attention.output.LayerNorm.bias","bert.encoder.layer.2.intermediate.dense.weight","bert.encoder.layer.2.intermediate.dense.bias","bert.encoder.layer.2.output.dense.weight","bert.encoder.layer.2.output.dense.bias","bert.encoder.layer.2.output.LayerNorm.weight","bert.encoder.layer.2.output.LayerNorm.bias","bert.encoder.layer.3.attention.self.query.weight","bert.encoder.layer.3.attention.self.query.bias","bert.encoder.layer.3.attention.self.key.weight","bert.encoder.layer.3.attention.self.key.bias","bert.encoder.layer.3.attention.self.value.weight","bert.encoder.layer.3.attention.self.value.bias","bert.encoder.layer.3.attention.output.dense.weight","bert.encoder.layer.3.attention.output.dense.bias","bert.encoder.layer.3.attention.output.LayerNorm.weight","bert.encoder.layer.3.attention.output.LayerNorm.bias","bert.encoder.layer.3.intermediate.dense.weight","bert.encoder.layer.3.intermediate.dense.bias","bert.encoder.layer.3.output.dense.weight","bert.encoder.layer.3.output.dense.bias","bert.encoder.layer.3.output.LayerNorm.weight","bert.encoder.layer.3.output.LayerNorm.bias","bert.encoder.layer.4.attention.self.query.weight","bert.encoder.layer.4.attention.self.query.bias","bert.encoder.layer.4.attention.self.key.weight","bert.encoder.layer.4.attention.self.key.bias","bert.encoder.layer.4.attention.self.value.weight","bert.encoder.layer.4.attention.self.value.bias","bert.encoder.layer.4.attention.output.dense.weight","bert.encoder.layer.4.attention.output.dense.bias","bert.encoder.layer.4.attention.output.LayerNorm.weight","bert.encoder.layer.4.attention.output.LayerNorm.bias","bert.encoder.layer.4.intermediate.dense.weight","bert.encoder.layer.4.intermediate.dense.bias","bert.encoder.layer.4.output.dense.weight","bert.encoder.layer.4.output.dense.bias","bert.encoder.layer.4.output.LayerNorm.weight","bert.encoder.layer.4.output.LayerNorm.bias","bert.encoder.layer.5.attention.self.query.weight","bert.encoder.layer.5.attention.self.query.bias","bert.encoder.layer.5.attention.self.key.weight","bert.encoder.layer.5.attention.self.key.bias","bert.encoder.layer.5.attention.self.value.weight","bert.encoder.layer.5.attention.self.value.bias","bert.encoder.layer.5.attention.output.dense.weight","bert.encoder.layer.5.attention.output.dense.bias","bert.encoder.layer.5.attention.output.LayerNorm.weight","bert.encoder.layer.5.attention.output.LayerNorm.bias","bert.encoder.layer.5.intermediate.dense.weight","bert.encoder.layer.5.intermediate.dense.bias","bert.encoder.layer.5.output.dense.weight","bert.encoder.layer.5.output.dense.bias","bert.encoder.layer.5.output.LayerNorm.weight","bert.encoder.layer.5.output.LayerNorm.bias","bert.encoder.layer.6.attention.self.query.weight","bert.encoder.layer.6.attention.self.query.bias","bert.encoder.layer.6.attention.self.key.weight","bert.encoder.layer.6.attention.self.key.bias","bert.encoder.layer.6.attention.self.value.weight","bert.encoder.layer.6.attention.self.value.bias","bert.encoder.layer.6.attention.output.dense.weight","bert.encoder.layer.6.attention.output.dense.bias","bert.encoder.layer.6.attention.output.LayerNorm.weight","bert.encoder.layer.6.attention.output.LayerNorm.bias","bert.encoder.layer.6.intermediate.dense.weight","bert.encoder.layer.6.intermediate.dense.bias","bert.encoder.layer.6.output.dense.weight","bert.encoder.layer.6.output.dense.bias","bert.encoder.layer.6.output.LayerNorm.weight","bert.encoder.layer.6.output.LayerNorm.bias","bert.encoder.layer.7.attention.self.query.weight","bert.encoder.layer.7.attention.self.query.bias","bert.encoder.layer.7.attention.self.key.weight","bert.encoder.layer.7.attention.self.key.bias","bert.encoder.layer.7.attention.self.value.weight","bert.encoder.layer.7.attention.self.value.bias","bert.encoder.layer.7.attention.output.dense.weight","bert.encoder.layer.7.attention.output.dense.bias","bert.encoder.layer.7.attention.output.LayerNorm.weight","bert.encoder.layer.7.attention.output.LayerNorm.bias","bert.encoder.layer.7.intermediate.dense.weight","bert.encoder.layer.7.intermediate.dense.bias","bert.encoder.layer.7.output.dense.weight","bert.encoder.layer.7.output.dense.bias","bert.encoder.layer.7.output.LayerNorm.weight","bert.encoder.layer.7.output.LayerNorm.bias","bert.encoder.layer.8.attention.self.query.weight","bert.encoder.layer.8.attention.self.query.bias","bert.encoder.layer.8.attention.self.key.weight","bert.encoder.layer.8.attention.self.key.bias","bert.encoder.layer.8.attention.self.value.weight","bert.encoder.layer.8.attention.self.value.bias","bert.encoder.layer.8.attention.output.dense.weight","bert.encoder.layer.8.attention.output.dense.bias","bert.encoder.layer.8.attention.output.LayerNorm.weight","bert.encoder.layer.8.attention.output.LayerNorm.bias","bert.encoder.layer.8.intermediate.dense.weight","bert.encoder.layer.8.intermediate.dense.bias","bert.encoder.layer.8.output.dense.weight","bert.encoder.layer.8.output.dense.bias","bert.encoder.layer.8.output.LayerNorm.weight","bert.encoder.layer.8.output.LayerNorm.bias","bert.encoder.layer.9.attention.self.query.weight","bert.encoder.layer.9.attention.self.query.bias","bert.encoder.layer.9.attention.self.key.weight","bert.encoder.layer.9.attention.self.key.bias","bert.encoder.layer.9.attention.self.value.weight","bert.encoder.layer.9.attention.self.value.bias","bert.encoder.layer.9.attention.output.dense.weight","bert.encoder.layer.9.attention.output.dense.bias","bert.encoder.layer.9.attention.output.LayerNorm.weight","bert.encoder.layer.9.attention.output.LayerNorm.bias","bert.encoder.layer.9.intermediate.dense.weight","bert.encoder.layer.9.intermediate.dense.bias","bert.encoder.layer.9.output.dense.weight","bert.encoder.layer.9.output.dense.bias","bert.encoder.layer.9.output.LayerNorm.weight","bert.encoder.layer.9.output.LayerNorm.bias","bert.encoder.layer.10.attention.self.query.weight","bert.encoder.layer.10.attention.self.query.bias","bert.encoder.layer.10.attention.self.key.weight","bert.encoder.layer.10.attention.self.key.bias","bert.encoder.layer.10.attention.self.value.weight","bert.encoder.layer.10.attention.self.value.bias","bert.encoder.layer.10.attention.output.dense.weight","bert.encoder.layer.10.attention.output.dense.bias","bert.encoder.layer.10.attention.output.LayerNorm.weight","bert.encoder.layer.10.attention.output.LayerNorm.bias","bert.encoder.layer.10.intermediate.dense.weight","bert.encoder.layer.10.intermediate.dense.bias","bert.encoder.layer.10.output.dense.weight","bert.encoder.layer.10.output.dense.bias","bert.encoder.layer.10.output.LayerNorm.weight","bert.encoder.layer.10.output.LayerNorm.bias","bert.encoder.layer.11.attention.self.query.weight","bert.encoder.layer.11.attention.self.query.bias","bert.encoder.layer.11.attention.self.key.weight","bert.encoder.layer.11.attention.self.key.bias","bert.encoder.layer.11.attention.self.value.weight","bert.encoder.layer.11.attention.self.value.bias","bert.encoder.layer.11.attention.output.dense.weight","bert.encoder.layer.11.attention.output.dense.bias","bert.encoder.layer.11.attention.output.LayerNorm.weight","bert.encoder.layer.11.attention.output.LayerNorm.bias","bert.encoder.layer.11.intermediate.dense.weight","bert.encoder.layer.11.intermediate.dense.bias","bert.encoder.layer.11.output.dense.weight","bert.encoder.layer.11.output.dense.bias","bert.encoder.layer.11.output.LayerNorm.weight","bert.encoder.layer.11.output.LayerNorm.bias","bert.pooler.dense.weight","bert.pooler.dense.bias"]



import torch
from transformers import BertForSequenceClassification, BertTokenizer
t = BertTokenizer.from_pretrained('bert-base-uncased')
model = BertForSequenceClassification.from_pretrained('bert-base-uncased', num_labels=1)

old = torch.load('/project/draugpu/experiments_bert_model/experiments_msmarco/model_bz_64_lr_3e-06_do_0.2_sr__cls_1000fine_tune_shuffle/model.epfinal.pth')

old = old.module
old = old.to('cuda')
model = model.to('cuda')

model.encoder = old.bert.encoder
model.embeddings = old.bert.embeddings
model.classifier = old.rank

model.eval()
old.eval()



def copy_param (source, target, params):
    target = dict(source.named_parameters())
    source = dict(target.named_parameters())
    for param in params:
        target_d[param].data.copy_(source_d[param].data)
